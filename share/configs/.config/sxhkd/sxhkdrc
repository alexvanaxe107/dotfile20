# Restart pkill -USR1 -x sxhkd
# Start the terminal
super + Return
	source ~/.config/bspwm/themes/bsp.cfg; wezterm

super + shift + Return
	source ~/.config/bspwm/themes/bsp.cfg; alacritty

# start dmenu
super + d
    ava_dmenu_run

# Toggle mute
XF86AudioMute
    pulseaudio-ctl mute

# Change volume
XF86Audio{Raise,Lower}Volume
    pulseaudio-ctl {up,down} 2

XF86MonBrightness{Down,Up}
    light -{U,A} 3

# Play Radio!
super + shift + r
	play_radio.sh

# Configure Printscreen
Print
	flameshot gui

#Player Control
super + shift + s
	player_ctl.sh

#Lock screen
super + shift + x
	lock.sh

#DmenuAlexia
super + a
	dmenulexia.sh

#Fix Light
super + shift + i
	avalight

#Pomodoro
super + shift + p
	pomodoro-client.sh

#Todos
super + shift + t
	dtodosh.sh

# Change theme
super + shift + y
	theme_select.sh

# Change font
super + shift + f
	font_select.sh

#Power management
super + shift + e
	powercontrol.sh

# Toggle the top bar
super + shift + b
	toggle_bars.sh

# balance equalize
super + b
	bspc node @/ --balance

super + n
	bspc node @/ --equalize

# Hide show window
super + v
	bspc_node_manager.sh -i

super + shift + v
	bspc_node_manager.sh -I

super + ctrl + v
	bspc_node_manager.sh -aI

# Configure monitors
super + shift + d
	configdisplay.sh

# Equalizer
super + shift + a
	equalizer

# Terminal theme
super + shift + o
	terminal_theme.sh

# Edit Config file
super + shift + u
	configshortcut.sh

# Change the configs
super + c; {c,r,shift + r,m, shift + M,a}
	{$HOME/.config/conky/conky.sh \
    , dmenulexia.sh "rofi off" \
    , dmenulexia.sh "rofi on" \
    , dmenulexia.sh "mouse off" \
    , dmenulexia.sh "mouse on" \ 
    , pulseaudio-ctl sink }

super + y
    status_notify.sh -q

# Show the status
super + p; {c,t,l,m,v,w,C,M,s,f,q,p,a}
	{status_notify.sh -c \
    , status_notify.sh -d \
    , status_notify.sh -l \
    , status_notify.sh -m \
    , status_notify.sh -v \
    , status_notify.sh -w \
    , status_notify.sh -C \
    , status_notify.sh -M \
    , status_notify.sh -s \
    , status_notify.sh -f \
    , status_notify.sh -q \
    , dunstctl set-paused toggle \
    , status_notify.sh -ctlmvw }

super + Tab
	bspc_node_manager.sh

super + alt + Tab
	bspc_node_manager.sh -b

# Toggle the top bar
super + ctrl + b; {s,f,t,h,g,p}
	{toggle_bars.sh --target2 \
    , toggle_bars.sh --target1 \
    , toggle_bars.sh --tint \
    , toggle_bars.sh --autohide \
    , toggle_bars.sh --eww1 \
    , toggle_bars.sh --eww2}

super + shift + g ; {g,f}
	{start.sh -E \
     , qutebrowser \
    }

super + shift + g ; {k}
	setkmap

super + shift + g ; {t}
	. ~/.config/bspwm/themes/bsp.cfg;wezterm start --class translation translate.sh -t

# Change wallpapers
super + shift + w
	wallpaper_changer.sh


###################
##### WM KEYS #####
###################

# quit/restart bspwm
#super + r
#	bspwmexit.sh -r "Restart?"

super + r : {Left,Down,Up,Right}
    STEP=20; SELECTION={1,2,3,4}; \
    bspc node -z $(echo "left -$STEP 0,bottom 0 $STEP,top 0 -$STEP,right $STEP 0" | cut -d',' -f$SELECTION) || \
    bspc node -z $(echo "right -$STEP 0,top 0 $STEP,bottom 0 -$STEP,left $STEP 0" | cut -d',' -f$SELECTION)

# Exit the window manager asking confirmation
super + e
	bspwmexit.sh -e "Exit?"

# close and kill
super + {_,shift + }q
	bspc node -{c,k}

# Alternate between windows
super + space
    bspc desktop --focus last

# Remove the current desktop
super + Delete
	bspc desktop focused --remove

# Create a desktop
super + ctrl + {F}{1,2,3,4,5,6,7,8,9,10}
	bspc monitor focused --add-desktops '{terminal,web,coding,trade,game,book,video,twitter,chat,audio}'

# focus or send to the given desktop
super + shift + {1-9,0}
	bspwm_desktop_manager.sh -m '{1-9,10}'

super + {1-9,0}
	bspwm_desktop_manager.sh -g '{1-9,10}'

super + z : {1-9,0}
	bspwm_desktop_manager.sh -r '{1-9,10}'

# focus or send to the given desktop considering all monitors
super + {_,shift + }{F}{1,2,3,4,5,6,7,8,9,10}
	bspc {desktop -f, node -d} '^{1,2,3,4,5,6,7,8,9,10}'

# Swap desktops
super + alt + {F}{1}
	bspwm_desktop_manager.sh -dp

# Go to desktop by list
super + minus
	bspwm_desktop_manager.sh -dl

super + shift + minus
	bspwm_desktop_manager.sh -dL

# Send node to the other monitor
super + t
	bspc node focused --to-monitor next

#Send node to the other monitor and follow it
super + ctrl + t
	bspc node focused --to-monitor next --follow

#Send the desktop to another monitor and follow it
super + alt + t
	bspc desktop focused --to-monitor next --follow

# Send to other desktop and follow it
super + control + {1-9,0}
	bspwm_desktop_manager.sh -f '{1-9,10}'

# Cycle through nodes
super + control + {j,k}
	bspc node -f {next.local.leaf,prev.local.leaf}

# focus the node in the given direction
super + shift + {h,j,k,l}
	bspc node -s {west.local,south.local,north.local,east.local}

# Navigate in the desktops
super + ctrl + {comma,period}
	bspc desktop -f {prev,next}

# Send desktop forward, backwards
super + shift + {comma,period}
	bspc desktop --bubble {prev,next}

# Move to the next prev desktop
super + {comma,period}
	bspc monitor --focus {prev,next}

# Insert receptacle
super + alt + i
	bspc node -i

# Remove receptacle
super + ctrl + i
	for win in `bspc query -N -n .leaf.!window`; do bspc node $win -k ; done;

super + i
        bspc_node_manager.sh -g

# Change the transparency of the current active window
super + o : {d,u,r,R}
    {picom-trans -c +5, picom-trans -c -5, picom-trans -c --delete, picom-trans -r}

#
# state/flags
#

super + w : {t,p,s,f}
	bspc node -t {tiled,pseudo_tiled,floating,fullscreen}


# alternate between the tiled and monocle layout
super + shift +  m
	bspc desktop -l next

# set ignore ewmh to fullscreen to container
super + f
	bspc config ignore_ewmh_fullscreen enter

super + ctrl + f
	bspc config ignore_ewmh_fullscreen none

# set the node flags
super + {x,s}
	bspc node -g {locked,sticky}

super + m
	bspc_node_manager.sh -m

# focus the node in the given direction
super + {h,j,k,l}
	bspc node -f {west.local,south.local,north.local,east.local}

# move the node in the given direction
super + shift + control + {h,j,k,l}
	bspc node --to-node {west.local,south.local,north.local,east.local}

#
# preselect
#

# preselect the direction
super + alt + {h,j,k,l}
	bspc node -p {west,south,north,east}

# preselect the ratio
super + alt + {1-9}
	bspc node -o 0.{1-9}

# cancel the preselection for the focused node
super + alt + Escape
	bspc node -p cancel

# expand a window by moving one of its side outward
super + control + {Left,Down,Up,Right}
	bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

# contract a window by moving one of its side inward
super + control + shift + {Left,Down,Up,Right}
	bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}

# Increase/decrease window gap on focused desktop
super + bracket{left,right}
	bspc config -d focused window_gap $((`bspc config -d focused window_gap` {-,+} 5 ))

# Increase/decrease window gap on focused desktop
super + equal
	bspc config -d focused window_gap 6

super + shift + equal
	bspc config -d focused window_gap 0

# Focus when clicking
~button1
	bspc pointer --grab focus

# End Move/Risize
